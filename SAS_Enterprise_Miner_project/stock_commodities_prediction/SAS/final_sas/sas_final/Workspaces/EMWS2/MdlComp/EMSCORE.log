*------------------------------------------------------------*
* Score Log
Date:                December 08, 2019
Time:                11:43:41
*------------------------------------------------------------*
NOTE: View EMWS2.TREE10_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS2.TREE10_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      
11356  /* Generate assessment metadata, which will be used to generate assessment data step */
11357  /* code, such as retrieving names of temporary variables and summary variables,      */
11358  /* labels, etc.  It is used in almost all the assessment computations such as lift,  */
11359  /* roc, index, scoreDist and could be thought as a global variable in assessment     */
11360  /* computation.                                                                      */
11361  data work.ASSESS_2BT0MNI_assessMeta_XwZ6LK;
11362  length VARIABLE $32 FORMAT $44 TYPE $32 PARENT $32 LEVEL $32 PROPERTY $32 MEASUREMENT $10 LAST_LEVEL $32 GEN_VAR_IN_TEMP_DATA $32 RESULT_MEAN $32 RESULT_MEAN_LABEL $100 RESULT_MIN $32 RESULT_MIN_LABEL $100 MIN_ADJUSTED $32 RESULT_MAX $32
11362! RESULT_MAX_LABEL
11363     $100 MAX_ADJUSTED $32 RESULT_COUNT $32 RESULT_COUNT_LABEL $100 TEMPORARY_VARIABLE $32;
11364  VARIABLE = "stockprice";
11365  PARENT = "";
11366  FORMAT = "";
11367  TYPE = "";
11368  LEVEL = '';
11369  PROPERTY = "TARGET";
11370  MEASUREMENT = "INTERVAL";
11371  LAST_LEVEL = '';
11372  GEN_VAR_IN_TEMP_DATA = "stockprice";
11373  RESULT_MEAN = "_targetMean_";
11374  RESULT_MEAN_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_trgtMean_vlabel, NOQUOTE))";
11375  RESULT_MIN = "_targetMin_";
11376  RESULT_MIN_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_trgtMin_vlabel, NOQUOTE))";
11377  MIN_ADJUSTED = "stockpri_minAdjusted_JjmKdAAuY";
11378  RESULT_MAX = "_targetMax_";
11379  RESULT_MAX_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_trgtMax_vlabel, NOQUOTE))";
11380  MAX_ADJUSTED = "stockpri_maxAdjusted_thvBpv3ay";
11381  RESULT_COUNT = "";
11382  RESULT_COUNT_LABEL = "";
11383  TEMPORARY_VARIABLE = "stockprice_Aap6I3URhgTzxIN";
11384  output;
11385  VARIABLE = "P_stockprice";
11386  FORMAT = "";
11387  TYPE = "";
11388  PARENT = "";
11389  LEVEL = "";
11390  PROPERTY = "PREDICTED";
11391  MEASUREMENT = "INTERVAL";
11392  LAST_LEVEL = "";
11393  GEN_VAR_IN_TEMP_DATA = "P_stockprice";
11394  RESULT_MEAN = "_meanP_";
11395  RESULT_MEAN_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_predMean_vlabel, NOQUOTE))";
11396  RESULT_MIN = "_minP_";
11397  RESULT_MIN_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_predMin_vlabel, NOQUOTE))";
11398  MIN_ADJUSTED = "P_stockp_minAdjusted_vcGUIP4g6";
11399  RESULT_MIN_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_predMin_vlabel, NOQUOTE))";
11400  RESULT_MAX = "_maxP_";
11401  RESULT_MAX_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_predMax_vlabel, NOQUOTE))";
11402  MAX_ADJUSTED = "max_adjusted";
11403  RESULT_COUNT = "";
11404  RESULT_COUNT_LABEL = "";
11405  TEMPORARY_VARIABLE = "P_stockprice_C0c_B5_TfbqdYLq";
11406  output;
11407  run;

NOTE: The data set WORK.ASSESS_2BT0MNI_ASSESSMETA_XWZ6LK has 2 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

11408  /* Generate temporary dataset and obtain summary statistics such as total number of   */
11409  /* obserations, frequency of target.  However, summary statistics for class reporting */
11410  /* variabels are not computed here since if there exist class reporting variables,    */
11411  /* then PROC DMDB will be called. And there is no need to compute interval reporting  */
11412  /* summary statisitcs, if any.                                                        */
11413  data work.ASSESS_2BT0MNI_normSD_iblqUn(drop=
11414  _numberOfObservation_
11415  _intervalTargetMin_ _intervalTargetMax_
11416  )
11417  work.ASSESS_2BT0MNI_meansAndTi_IHYsXl (keep=
11418  _numberOfObservation_
11419  _intervalTargetMin_ _intervalTargetMax_
11420  );
11421  set EMWS2.Tree10_TRAIN(
11422  where=(
11423  (stockprice ^= .)
11424  and (P_stockprice ^= .)
11425  )
11426  ) end=_lastObservation_;
11427  keep frequency_W6jL92;
11428  frequency_W6jL92 = 1;
11429  keep stockprice;
11430  keep P_stockprice;
11431  output work.ASSESS_2BT0MNI_normSD_iblqUn;
11432  keep _numberOfObservation_;
11433  retain _numberOfObservation_ 0;
11434  _numberOfObservation_ + frequency_W6jL92;
11435  keep _intervalTargetMin_ _intervalTargetMax_;
11436  retain _intervalTargetMin_ .;
11437  retain _intervalTargetMax_ .;
11438  if (_n_ = 1) then do;
11439  _intervalTargetMin_ = P_stockprice;
11440  _intervalTargetMax_ = P_stockprice;
11441  end;
11442  else do;
11443  if (_intervalTargetMin_ > P_stockprice) then do;
11444  _intervalTargetMin_ = P_stockprice;
11445  end;
11446  if (_intervalTargetMax_ < P_stockprice) then do;
11447  _intervalTargetMax_ = P_stockprice;
11448  end;
11449  end;
11450  if _lastObservation_ then do;
11451  output work.ASSESS_2BT0MNI_meansAndTi_IHYsXl;
11452  end;
11453  run;

NOTE: Variable _WARN_ is uninitialized.
NOTE: View EMWS2.TREE10_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      
NOTE: There were 20 observations read from the data set EMWS2.PART5_TRAIN.
NOTE: There were 20 observations read from the data set EMWS2.TREE10_TRAIN.
      WHERE (stockprice not = .) and (P_stockprice not = .);
NOTE: The data set WORK.ASSESS_2BT0MNI_NORMSD_IBLQUN has 20 observations and 3 variables.
NOTE: The data set WORK.ASSESS_2BT0MNI_MEANSANDTI_IHYSXL has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

11454  data WORK._EMRANK;
11455  set EMWS2.MdlComp_EMRANK;
11456  where MODEL = "Tree10" and TARGET = "stockprice" and dataRole="TRAIN";
11457  run;

NOTE: There were 1 observations read from the data set EMWS2.MDLCOMP_EMRANK.
      WHERE (MODEL='Tree10') and (TARGET='stockprice') and (dataRole='TRAIN');
NOTE: The data set WORK._EMRANK has 1 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

11458  data work._augment;
11459  do BIN= 1 to 20;
11460  DECILE = BIN*5;
11461  output;
11462  end;
11463  run;

NOTE: The data set WORK._AUGMENT has 20 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

11464  data WORK._EMRANK;
11465  merge WORK._AUGMENT WORK._EMRANK;
11466  by BIN;
11467  run;

NOTE: There were 20 observations read from the data set WORK._AUGMENT.
NOTE: There were 1 observations read from the data set WORK._EMRANK.
NOTE: The data set WORK._EMRANK has 20 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

11468  data WORK._EMRANK;
11469  set WORK._EMRANK end=_lastObservation_;
11470  retain _previousMinP_ _previousMaxP_;
11471  retain _group_ 1;
11472  keep bin _cutoff_ _group_;
11473  if (bin > 1) then do;
11474  bin = bin - 1;
11475  _cutoff_ = (_maxP_ + _previousMinP_) / 2;
11476  if (abs(_previousMaxP_ - _previousMinP_) < 1E-6) then do;
11477  /* tied */
11478  _cutoff_ = max((_minP_ + _maxP_)/2, min(_cutoff_, _previousMinP_/*-1E-6*/
11479  ));
11480  end;
11481  else if (abs(_maxP_ - _minP_) < 1E-6) then do;
11482  /* next tied */
11483  _cutoff_ = min((_previousMinP_ + _previousMaxP_)/2, max(_cutoff_, _maxP_/*+ 1E-6*/
11484  ));
11485  end;
11486  output;
11487  *if ( abs((_maxP_ +_minP_)/2 - (_previousMaxP_ + _previousMinP_)/2) > 1E-6) then do;
11488  * _group_ + 1;
11489  *end;
11490  if (_maxP_ le _previousMinP_ - 1E-6) then do;
11491  _group_ + 1;
11492  end;
11493  else if (abs(_maxP_ - _previousMinP_) < 1E-6) then do;
11494  if (abs(_maxP_ - _minP_) > 1E-6) then do;
11495  _group_ + 1;
11496  end;
11497  end;
11498  bin + 1;
11499  /* correct the previous change */
11500  end;
11501  if (_lastObservation_) then do;
11502  _cutoff_ = .;
11503  output;
11504  end;
11505  _previousMinP_ = _minP_;
11506  _previousMaxP_ = _maxP_;
11507  run;

NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      19 at 11475:20   18 at 11476:5    18 at 11476:24   18 at 11478:12   19 at 11478:24   19 at 11478:33   18 at 11478:37   18 at 11490:30   
NOTE: There were 20 observations read from the data set WORK._EMRANK.
NOTE: The data set WORK._EMRANK has 20 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

11508  data WORK._EMRANK;
11509  set WORK._EMRANK;
11510  by _group_;
11511  retain _start_;
11512  if (first._group_) then do;
11513  _start_ = _n_;
11514  end;
11515  if (last._group_) then do;
11516  _end_ = _n_;
11517  output;
11518  end;
11519  run;

NOTE: There were 20 observations read from the data set WORK._EMRANK.
NOTE: The data set WORK._EMRANK has 20 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: This SAS session is using a registry in WORK.  All changes will be lost at the end of this session.
11520  filename emflow "F:\WQD7005\MalaysiaStockPrediction-master\SAS\Mildstone5\Milestone5-Insight\Workspaces\EMWS2\MdlComp\EMFLOWSCORE.sas";
11521  *------------------------------------------------------------*;
11522  * MdlComp: Scoring TREE10_TRAIN data;
11523  *------------------------------------------------------------*;
11524  data EMWS2.MdlComp_TRAIN
11525  / view=EMWS2.MdlComp_TRAIN
11526  ;
11527  set EMWS2.Tree10_TRAIN
11528  ;
11529  %inc emflow;
11537  run;

NOTE: DATA STEP view saved on file EMWS2.MDLCOMP_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS2.TREE10_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

11538  quit;
11539  filename emflow;
NOTE: Fileref EMFLOW has been deassigned.

11540  filename emflow "F:\WQD7005\MalaysiaStockPrediction-master\SAS\Mildstone5\Milestone5-Insight\Workspaces\EMWS2\MdlComp\EMFLOWSCORE.sas";
11541  *------------------------------------------------------------*;
11542  * MdlComp: Scoring TREE10_VALIDATE data;
11543  *------------------------------------------------------------*;
11544  data EMWS2.MdlComp_VALIDATE
11545  / view=EMWS2.MdlComp_VALIDATE
11546  ;
11547  set EMWS2.Tree10_VALIDATE
11548  ;
11549  %inc emflow;
11557  run;

NOTE: DATA STEP view saved on file EMWS2.MDLCOMP_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS2.TREE10_VALIDATE.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

11558  quit;
11559  filename emflow;
NOTE: Fileref EMFLOW has been deassigned.

11560  *------------------------------------------------------------*;
11561  * MdlComp: Computing metadata for TRAIN data;
11562  *------------------------------------------------------------*;

NOTE: View EMWS2.MDLCOMP_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
NOTE: View EMWS2.MDLCOMP_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
NOTE: View EMWS2.MDLCOMP_VALIDATE.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
